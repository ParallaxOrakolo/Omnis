scalar JSON
scalar Decimal
scalar Upload
scalar timestamptz

schema {
  mutation: Mutation
  query: Query
  subscription: Subscription
}

type Mutation {
  createNodeSheet(
    _id: ID!
    name: String
    saved: Boolean
    duplicated:Boolean
    last_access: Float
    description: String
    node_qtd: Int
    author: String
    content: JSON!
  ): Boolean

  saveNodeSheet(
    _id: ID
    parent_id: ID
    label: String
    description: String
    author: String
    version: Int
    last_access: Float
    saved: Boolean
    duplicated:Boolean
    content: JSON
    node_qtd: Int
    key: ID
  ): SketchListResult!

  updateNodeSheet(_id: ID!, name: String, content: JSON): Boolean
  deleteNodeSheet(_id: ID!): Boolean
  duplicateNodeSheet(_id: ID!): Boolean
  
  startProcess(_id: ID!): Boolean
  stopProcess: Boolean
  resumeProcess: Boolean
  pauseProcess: Boolean

  loadConfig(_id: ID!): NodeSheet
  getLoadedConfig: ID!

  createAlert(input: AlertInput!): AlertResult!

  uploadFile(file: Upload!): FileResult!
  uploadPhoto(photo: Upload!): Photo!
  takePhoto(camera_id: ID!): Photo!

  createCamera(input: CameraInput!): CameraResult!
  startCamera(_id: ID!): CameraResult!
  stopCamera(_id: ID!): CameraResult!
  resetCamera(_id: ID!): CameraResult!

  createSerial(input: JSON): Serial!
  startSerial(_id: ID!): Serial!
  stopSerial(_id: ID!): Serial!
  resetSerial(_id: ID!): Serial!
  sendSerial(_id: ID!, payload: String!): Serial!
  setCameraProperty(_id: ID!, input: JSON): CameraResult!

  syncHostTime(timestamp: Int): Boolean!
}

type Query {
  getNodeSheet(_id: ID!): NodeSheetResult!
  getSketchList: SketchListResult!
  getAxisList: [AxisResult!]
  getDevicesList: [DeviceResult!]
  getNodeInfo(node_type: ID!, kwargs: JSON): NodeInfoResult!

  getCamera(_id: ID!): CameraResult!
  getCameras: CamerasResult!

  getSerial(_id: ID!): Serial!
  getSerials: SerialsResult!

  getProcess: ProcessResult

  updateAlerts: DefaultStatus
  allPhotos: [Photo]

  getManutention: ManutentionResult
  getThr: [String]

  calibrateCamera(input: CalibrateRequestInput!): Boolean
  getLoadedNodes: [Node_Status]
  getLoadedConfig: NodeSheet
}

type Subscription {
  alerts: AlertResult
  cameras: Camera
  serials: Serial
  calibrations: StepResult
  nodes: Node_Status
  controls: control_status
}
