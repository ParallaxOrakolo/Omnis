version: "3.1"
services:
  mongo:
    profiles: ["prod"]
    privileged: true
    image: mongo:4.2
    container_name: mongo_c
    restart: always
    ports:
      - ${DB_PORT}:27017
    environment:
      MONGO_INITDB_DATABASE: ${DB_NAME}
      # MONGO_INITDB_ROOT_USERNAME: ${DB_USER}
      # MONGO_INITDB_ROOT_PASSWORD: ${DB_PASS}
    networks:
        - bind-network
    volumes: 
      - ./mongodb:/data/db
 
  mongo-express:
    profiles: ["prod"]
    privileged: true
    image: mongo-express:latest
    restart: always
    ports:
      - 8888:8081
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo_c
      ME_CONFIG_MONGODB_PORT: ${DB_PORT}

      ME_CONFIG_BASICAUTH_USERNAME: ${EXPRESS_USER}
      ME_CONFIG_BASICAUTH_PASSWORD: ${EXPRESS_PASSWORD}

    links:
      - mongo
    networks:
      - bind-network
    depends_on:
      - mongo
    volumes: 
      - ./mongodb:/data/db

  backend:
    profiles: ["prod", "dev"]
    privileged: true
    container_name: backend
    image: omnisofc/backend:latest
    build:
      context: ./backend
    restart: always
    ports:
      - ${STREAMING_PORT}:${STREAMING_PORT}
      - ${SERVER_PORT}:${SERVER_PORT}

    env_file: .env
    environment:
      DB_HOST: mongo_c
      NODE_ENV: production
    # links:
    #   - mongo
    networks:
      - bind-network
    # Enable access to the camera and serial devices (if the device is connected, otherwise it will fail)
    # devices:
      # - "/dev/ttyACM0:/dev/ttyACM0"
      # - "/dev/video0:/dev/video0"
      # - "/dev/video2:/dev/video2"
      # - "/dev/video4:/dev/video4"
    volumes:
      # Share /dev is insecure but is required for the camera and serial devices that not has connected to the host. ( disable this if all devices are connected to the host )
      - ./backend:/app
      - /home/ubuntu/.url_host:/app/.url_host
      - /dev:/dev
    command: python main.py
    # depends_on:
    #   - mongo-express
      
  frontend:
    profiles: ["prod"]
    privileged: true
    container_name: frontend
    image: omnisofc/frontend:latest
    build:
      context: ./frontend/
    restart: always
    volumes:
      - ./frontend/dist:/app
    ports:
      - 80:80
    networks:
      - bind-network
      - default
    links:
      - backend
    depends_on:
      - backend

networks: 
  bind-network:
    driver: bridge